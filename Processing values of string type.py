# -*- coding: utf-8 -*-
"""Лещенко Олег - Опрацювання рядків.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qDYTIiHjJ2OsJ-pja55qw_R7Vi7V4K5V

**Операції з рядками**

* \n - у команді print - виведення частин рядкової величини на різних рядках
* \ - у програмному коді - розділення єдиного рядка програмного коду на частини для відображення у різних рядках коду
* \+ додавання рядків
* \* множення рядка на число
* [індекс] - звернення до символу з указаним індексом
"""

print("1. hello\nworld")
print("2. hello\world")
print("3. hello\
world")

m = 'Hello'
n = 'World'
print(m + n)
print(m * 5)

a = 'Hello World'
print(a[6])
print(len(a))

"""**Операція зрізу**

[початок : кінець : крок] - звернення до частини рядка
"""

a = 'Hello World'
print('1. ' + a)
print('2. ' + a[0:6])
print('3. ' + a[0:11:2])
print('4. ' + a[::6])
print('4. ' + a[::-2])

"""**Операції з кодами символів**

* chr(код) - отримання символу за його кодом у таблиці Юнікод
* ord(символ) - отримання коду вказаного символу
"""

print(ord('W'))
print(chr(1041))

en = list('Hello World')
for i in en: 
  print(i + ' : ' + str(ord(i)), end = ', ')
print()
uk = list('Привіт, Світ')
for i in uk: 
  print(i + ' : ' + str(ord(i)), end = ', ')

"""**Методи роботи з рядками**

* відокремлювач.join(послідовність) - перетворює послідовність на рядок; елементи послідовності розділені відокремлювачем
* upper() - змінює всі літери на великі
* lower() - змінює всі літери на маленькі
* capitalize() - замінює першу літеру на велику, інші на маленькі
"""

sp = ['Hello', 'All', 'World']
r = ' '.join(sp)
print('1. ' + r)
print('2. ' + r.capitalize())
print('3. ' + r.upper())
print('4. ' + r.lower())

"""**Методи пошуку та заміни у рядку**

* find() - здійснює пошук підрядка у рядку, повертає індекс, з якого починається перший підрядок, або -1, якщо підрядок відсутній; можна указати початок та кінець діапазону для пошуку
* index() - здійснює пошук підрядка у рядку, повертає індекс, з якого починається підрядок, або ValueError, якщо підрядок відсутній
* rfind() - здійснює пошук підрядка у рядку, повертає індекс, з якого починається останній підрядок, або -1, якщо підрядок відсутній
* count() - визначає кількість входжень підрядка в рядок
* replace() - замінює всі входження підрядка в рядку на інший підрядок, повертає новий рядок
"""

fst = 'Ой яка чудова українська мова. Є в ній ліс, лісок, лісочок, хаща, гай, діброва. Є ще і байрак'
snd = 'ліс'
thd = 'гай'
print(fst.find(snd))
print(fst.find(snd,0,30))
print(fst.index(snd))
# print(fst.index(snd,0,30))
print(fst.rfind(snd))
print(fst.rfind(snd,0,30))

print(fst.count(snd))
fth = fst.replace(snd, thd)
print(fth)
fifth = fst.replace(snd, thd, 2)
print(fifth)

"""**Задача 1.**

Напишіть програму, яка виводить на екран рядок з 5-ти копій останніх двох символів введеного користувачем рядка (довжина введеного рядка повинна бути не менше 2).
"""

a=input()
print(a[-2:]*5)

"""**Задача 2.**

Дано рядок. Змініть регістр символів в цьому рядку так, щоб перша буква кожного слова була великою, а інші літери - малими.
"""

a=list(input().split())
for i in a:
  i=i.capitalize()
  print(i, end=" ")

"""**Задача 3.**

Дано слово. З’ясуйте, чи слово починається і закінчується на одну і ту ж букву. Регістр літер не враховувати.
"""

a=str(input())
print(a[0].upper()==a[-1:].upper())